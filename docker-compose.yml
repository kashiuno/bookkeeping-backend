version: '2'

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 10.100.1.0/16

services:
  nginx:
    image: nginx:1.13
    container_name: servernginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/upstream.conf:/etc/nginx/conf.d/upstream.conf
      - ./docker/nginx/sites.compose:/etc/nginx/sites.compose
      - ./docker/var/log/nginx:/var/log/nginx
    depends_on:
      - php74
    restart: always
    networks:
      default:
        ipv4_address: 10.100.1.10

  php74:
    build: ./docker/php74
    container_name: interpreterphp74
    volumes:
      - ./:/var/www/html
      - ./docker/php74/php.ini:/usr/local/etc/php/php.ini
      - ./docker/php74/conf.d/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./docker/php74/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./docker/php74/php-fpm.d/php-fpm.conf:/usr/local/etc/php-fpm.d/php-fpm.conf
      - ./docker/php74/msmtprc:/etc/msmtprc
      - ./docker/var/log/php:/var/log/php
    depends_on:
      - mysql
    restart: always
    networks:
      default:
        ipv4_address: 10.100.1.16

  mysql:
    image: mysql:5.7
    container_name: databasemysql
    # ports:
    #    - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mysql
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/var/data/mysql:/var/lib/mysql
      - ./docker/var/log/mysql:/var/log/mysql
    command: bash -c "chown -R mysql:mysql /var/log/mysql && exec /entrypoint.sh mysqld"
    restart: always
    networks:
      default:
        ipv4_address: 10.100.1.12
